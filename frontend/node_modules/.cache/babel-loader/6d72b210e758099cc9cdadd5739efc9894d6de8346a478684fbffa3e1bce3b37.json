{"ast":null,"code":"/*\r\nTermos\r\ncontext:\r\nÉ uma forma de compartilhar dados entre componentes sem precisar passar props manualmente de pai para filho.\r\n\r\nAprendizados:\r\n| Elemento     | Papel                            |\r\n| ------------ | -------------------------------- |\r\n| `cliente`    | Valor atual do estado do cliente |\r\n| `setCliente` | Atualiza os dados do cliente     |\r\n| `pedido`     | Valor atual do pedido do cliente |\r\n| `setPedido`  | Atualiza os dados do pedido      |\r\n*/import{createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const PedidoContext=/*#__PURE__*/createContext();//Armazena os dados do pedido do cliente\nexport const PedidoProvider=_ref=>{let{children}=_ref;const[cliente,setCliente]=useState({});//guarda os dados do cliente (nome, CPF, endereço)\nconst[pedido,setPedido]=useState({});//guarda os dados do pedido (sabor, tamanho, quantidade, borda)\nreturn/*#__PURE__*/_jsx(PedidoContext.Provider,{value:{cliente,setCliente,pedido,setPedido},children:children});};","map":{"version":3,"names":["createContext","useState","jsx","_jsx","PedidoContext","PedidoProvider","_ref","children","cliente","setCliente","pedido","setPedido","Provider","value"],"sources":["C:/Users/ariel/OneDrive/Área de Trabalho/So vai/frontend/src/context/PedidoContext.js"],"sourcesContent":["/*\r\nTermos\r\ncontext:\r\nÉ uma forma de compartilhar dados entre componentes sem precisar passar props manualmente de pai para filho.\r\n\r\nAprendizados:\r\n| Elemento     | Papel                            |\r\n| ------------ | -------------------------------- |\r\n| `cliente`    | Valor atual do estado do cliente |\r\n| `setCliente` | Atualiza os dados do cliente     |\r\n| `pedido`     | Valor atual do pedido do cliente |\r\n| `setPedido`  | Atualiza os dados do pedido      |\r\n*/\r\n\r\nimport { createContext, useState } from \"react\";\r\n\r\nexport const PedidoContext = createContext();//Armazena os dados do pedido do cliente\r\n\r\nexport const PedidoProvider = ({ children }) => {\r\n  const [cliente, setCliente] = useState({}); //guarda os dados do cliente (nome, CPF, endereço)\r\n  const [pedido, setPedido] = useState({});//guarda os dados do pedido (sabor, tamanho, quantidade, borda)\r\n\r\n  return (\r\n    <PedidoContext.Provider value={{ cliente, setCliente, pedido, setPedido }}>\r\n      {children}\r\n    </PedidoContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,OAASA,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,MAAO,MAAM,CAAAC,aAAa,cAAGJ,aAAa,CAAC,CAAC,CAAC;AAE7C,MAAO,MAAM,CAAAK,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AAC5C,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAEzC,mBACEE,IAAA,CAACC,aAAa,CAACQ,QAAQ,EAACC,KAAK,CAAE,CAAEL,OAAO,CAAEC,UAAU,CAAEC,MAAM,CAAEC,SAAU,CAAE,CAAAJ,QAAA,CACvEA,QAAQ,CACa,CAAC,CAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}